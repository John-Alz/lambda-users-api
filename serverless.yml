org: jjorg
service: lambda-users-api



provider:
  name: aws
  region: us-east-1


  # SECCIÓN 3: PERMISOS DE IAM (PARA QUE LAS LAMBDAS PUEDAN ACCEDER A OTROS SERVICIOS)
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "sqs:SendMessage"
          Resource: "arn:aws:sqs:us-east-1:178220864854:user-events-queue"
        - Effect: "Allow"
          Action: "sns:Publish"
          Resource: "arn:aws:sns:us-east-1:178220864854:new-user-notifications"

functions:
  # ========================
  # NodeJS Lambdas
  # ========================
  getUsers:
    handler: src/users-node/infrastructure/in/rest/UserHandler.getUsers
    runtime: nodejs20.x
    events:
      - httpApi:
          path: /users
          method: get

  saveUser:
    handler: src/users-node/infrastructure/in/rest/UserHandler.saveUser
    runtime: nodejs20.x
    events:
      - httpApi:
          path: /users
          method: post

  # SECCIÓN 5: INDENTACIÓN CORRECTA
  sendEmail:
    handler: src/users-node/infrastructure/in/rest/SnsHandler.getUserBySqsEvent
    runtime: nodejs20.x
    events:
      - sqs:
          arn: arn:aws:sqs:us-east-1:178220864854:user-events-queue
          enabled: true

  # ========================
  # Java Lambdas
  # ========================

  deleteUser:
    handler: com.users.infrastructure.in.rest.UserRest$DeleteUserHandler::handleRequest
    runtime: java17
    package:
      artifact: src/users-java/build/libs/users-java-handlers-1.0-SNAPSHOT.jar
    events:
      - httpApi:
          path: /users/{id}
          method: delete

  putUser:
    handler: com.users.infrastructure.in.rest.UserRest$UpdateUserHandler::handleRequest
    runtime: java17
    package:
      artifact: src/users-java/build/libs/users-java-handlers-1.0-SNAPSHOT.jar
    events:
      - httpApi:
          path: /users/{id}
          method: put

          